# Generated by Django 5.0.4 on 2024-05-04 19:18

import colorfield.fields
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('teams', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalculatedValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator', models.CharField(choices=[('ADD', '+'), ('SUB', '-')], default='+', max_length=10)),
                ('value', models.CharField(blank=True, max_length=64, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ForecastVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('VALUE', 'Value'), ('CALCULATED', 'Calculated'), ('OFFSET', 'Offset')], default='Value', max_length=10)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('SEGMENT', 'Segment')], default='Daily', max_length=10)),
                ('format', models.CharField(choices=[('TIME', 'Time'), ('TEXT', 'Text'), ('NUMBER', 'Number'), ('BOOLEAN', 'Boolean')], default='Time', max_length=64)),
                ('default_value', models.CharField(blank=True, max_length=64, null=True)),
                ('offset_days', models.IntegerField(blank=True, null=True)),
                ('offset_hours', models.IntegerField(blank=True, null=True)),
                ('calculated_default_value', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='forecast.calculatedvalue')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='teams.location')),
                ('offset_linked_variable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='forecast.forecastvariable')),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comparison_operator', models.CharField(choices=[('LT', '<'), ('LE', '≤'), ('GT', '>'), ('GE', '≥'), ('EQ', '='), ('NE', '≠')], default='>', max_length=2)),
                ('comparison_value', models.CharField(blank=True, max_length=64, null=True)),
                ('comparison_variable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conditions_referencing_as_comparison_variable', to='forecast.forecastvariable')),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions_referencing_as_variable', to='forecast.forecastvariable')),
            ],
        ),
        migrations.AddField(
            model_name='calculatedvalue',
            name='value_variable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='forecast.forecastvariable'),
        ),
        migrations.AddField(
            model_name='calculatedvalue',
            name='variable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calculated_values', to='forecast.forecastvariable'),
        ),
        migrations.CreateModel(
            name='PositionBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('active', models.BooleanField(default=True)),
                ('start_time_operator', models.CharField(choices=[('ADD', '+'), ('SUB', '-')], max_length=64)),
                ('start_time_calc_value', models.CharField(max_length=64)),
                ('end_time_operator', models.CharField(choices=[('ADD', '+'), ('SUB', '-')], max_length=64)),
                ('end_time_calc_value', models.CharField(max_length=64)),
                ('number_required', models.IntegerField(default=0)),
                ('conditions', models.ManyToManyField(to='forecast.condition')),
                ('end_time_variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_time_variable', to='forecast.forecastvariable')),
                ('start_time_variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_time_variable', to='forecast.forecastvariable')),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('FIXED', 'Fixed'), ('LIMIT', 'Limit'), ('SEGMENT', 'Segment')], max_length=64)),
                ('color', colorfield.fields.ColorField(choices=[('#000000', 'black'), ('#696969', 'dimgray'), ('#808080', 'gray'), ('#A9A9A9', 'darkgray'), ('#C0C0C0', 'silver'), ('#D3D3D3', 'lightgray'), ('#DCDCDC', 'gainsboro'), ('#FF0000', 'red'), ('#A52A2A', 'brown'), ('#FF4500', 'orangered'), ('#FFA500', 'orange'), ('#FFFF00', 'yellow'), ('#9ACD32', 'yellowgreen'), ('#008000', 'green'), ('#20B2AA', 'lightseagreen'), ('#00FFFF', 'aqua'), ('#00BFFF', 'deepskyblue'), ('#4169E1', 'royalblue'), ('#7B68EE', 'mediumslateblue'), ('#DA70D6', 'orchid')], default='#FFFFFF', image_field=None, max_length=25, samples=None)),
                ('minimum_age', models.IntegerField(choices=[(0, 'No minimum age'), (16, '16 years old'), (18, '18 years old'), (21, '21 years old')])),
                ('gender_specific', models.BooleanField(default=False)),
                ('required_gender', models.CharField(blank=True, choices=[('FEMALE', 'Female'), ('MALE', 'Male')], max_length=64, null=True)),
                ('unbudgeted', models.BooleanField(default=False)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team')),
                ('behaviors', models.ManyToManyField(to='forecast.positionbehavior')),
                ('skills', models.ManyToManyField(to='forecast.skill')),
            ],
        ),
        migrations.CreateModel(
            name='VariableBehavior',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.CharField(blank=True, max_length=64, null=True)),
                ('conditions', models.ManyToManyField(to='forecast.condition')),
                ('value_calculated', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='forecast.calculatedvalue')),
            ],
        ),
        migrations.AddField(
            model_name='forecastvariable',
            name='behaviors',
            field=models.ManyToManyField(blank=True, to='forecast.variablebehavior'),
        ),
        migrations.CreateModel(
            name='VariableInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=64)),
                ('date', models.DateField()),
                ('segment', models.CharField(blank=True, choices=[('0000', '00:00'), ('0015', '00:15'), ('0030', '00:30'), ('0045', '00:45'), ('0100', '01:00'), ('0115', '01:15'), ('0130', '01:30'), ('0145', '01:45'), ('0200', '02:00'), ('0215', '02:15'), ('0230', '02:30'), ('0245', '02:45'), ('0300', '03:00'), ('0315', '03:15'), ('0330', '03:30'), ('0345', '03:45'), ('0400', '04:00'), ('0415', '04:15'), ('0430', '04:30'), ('0445', '04:45'), ('0500', '05:00'), ('0515', '05:15'), ('0530', '05:30'), ('0545', '05:45'), ('0600', '06:00'), ('0615', '06:15'), ('0630', '06:30'), ('0645', '06:45'), ('0700', '07:00'), ('0715', '07:15'), ('0730', '07:30'), ('0745', '07:45'), ('0800', '08:00'), ('0815', '08:15'), ('0830', '08:30'), ('0845', '08:45'), ('0900', '09:00'), ('0915', '09:15'), ('0930', '09:30'), ('0945', '09:45'), ('1000', '10:00'), ('1015', '10:15'), ('1030', '10:30'), ('1045', '10:45'), ('1100', '11:00'), ('1115', '11:15'), ('1130', '11:30'), ('1145', '11:45'), ('1200', '12:00'), ('1215', '12:15'), ('1230', '12:30'), ('1245', '12:45'), ('1300', '13:00'), ('1315', '13:15'), ('1330', '13:30'), ('1345', '13:45'), ('1400', '14:00'), ('1415', '14:15'), ('1430', '14:30'), ('1445', '14:45'), ('1500', '15:00'), ('1515', '15:15'), ('1530', '15:30'), ('1545', '15:45'), ('1600', '16:00'), ('1615', '16:15'), ('1630', '16:30'), ('1645', '16:45'), ('1700', '17:00'), ('1715', '17:15'), ('1730', '17:30'), ('1745', '17:45'), ('1800', '18:00'), ('1815', '18:15'), ('1830', '18:30'), ('1845', '18:45'), ('1900', '19:00'), ('1915', '19:15'), ('1930', '19:30'), ('1945', '19:45'), ('2000', '20:00'), ('2015', '20:15'), ('2030', '20:30'), ('2045', '20:45'), ('2100', '21:00'), ('2115', '21:15'), ('2130', '21:30'), ('2145', '21:45'), ('2200', '22:00'), ('2215', '22:15'), ('2230', '22:30'), ('2245', '22:45'), ('2300', '23:00'), ('2315', '23:15'), ('2330', '23:30'), ('2345', '23:45')], max_length=64, null=True)),
                ('variable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forecast.forecastvariable')),
            ],
        ),
    ]
